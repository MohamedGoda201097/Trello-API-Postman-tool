{
	"info": {
		"_postman_id": "e62e3e56-201e-4cef-b1f6-f85c9767a0db",
		"name": "Trello_Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23485356"
	},
	"item": [
		{
			"name": "worksoace",
			"item": [
				{
					"name": "Organization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"WorkSpace_Name\",\"Practical\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.environment.set(\"organization_Id\", jsonData.id);\r",
									"\r",
									"pm.test(\"Verify that Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify organization Id from response\", function () {\r",
									"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"organization_Id\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{Trello2_url}}/1/organizations?displayName=New-worksapce&key={{key}}&token={{token}}&name={{WorkSpace_Name}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"organizations"
							],
							"query": [
								{
									"key": "displayName",
									"value": "New-worksapce"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "name",
									"value": "{{WorkSpace_Name}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an Organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{Trello2_url}}/1/organizations/{{organization_Id}}?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"organizations",
								"{{organization_Id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get field on Organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 3s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{Trello2_url}}/1/organizations/{{organization_Id}}/name?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"organizations",
								"{{organization_Id}}",
								"name"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": " Get the Members of an Organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 3s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{Trello2_url}}/1/organizations/{{organization_Id}}/members?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"organizations",
								"{{organization_Id}}",
								"members"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Borad",
			"item": [
				{
					"name": "Create  Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData =pm.response.json();\r",
									"pm.environment.set(\"Board_Id\",jsonData.id);\r",
									" \r",
									" \r",
									" pm.test(\"Verify that Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"verify that Response time is less than 3 Seconds\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that the name of Boaed\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Bored-Name\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" pm.environment.set(\"Bored-Name \", \"Bored-Name\")\r",
									" pm.environment.set(\"BoredDes\",\"This Boared name  is : \"\r",
									" +pm.environment.get(\"Bored-Name \")); \r",
									" \r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Trello2_url}}/1/boards/?key={{key}}&token={{token}}&name={{Bored-Name }}&desc={{BoredDes}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"boards",
								""
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "name",
									"value": "{{Bored-Name }}"
								},
								{
									"key": "desc",
									"value": "{{BoredDes}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 3s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"Bored-Name \"));\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Trello2_url}}/1/boards/{{Board_Id}}?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"boards",
								"{{Board_Id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Vreify that checking the update o f boared_name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Update_Board\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n    \"name\":\"Update_Board\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Trello2_url}}/1/boards/{{Board_Id}}?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"boards",
								"{{Board_Id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Update_Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{Trello2_url}}/1/boards/{{Board_Id}}?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"boards",
								"{{Board_Id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a field on a Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Trello2_url}}/1/boards/{{Board_Id}}/name?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"boards",
								"{{Board_Id}}",
								"name"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Actions of a Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 3s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Trello2_url}}/1/boards/{{Board_Id}}/actions?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"boards",
								"{{Board_Id}}",
								"actions"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Custom Fields for Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{Trello2_url}}/1/boards/{{Board_Id}}/customFields?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"boards",
								"{{Board_Id}}",
								"customFields"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invite Member to Board via email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\":\"mohamedgouda4444@gmail.com\" \n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Trello2_url}}/1/boards/{{Board_Id}}/members?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"boards",
								"{{Board_Id}}",
								"members"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Memberships of a Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{Trello2_url}}/1/boards/{{Board_Id}}/memberships?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"boards",
								"{{Board_Id}}",
								"memberships"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "List",
			"item": [
				{
					"name": "Create List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify taht checking  of name_List\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"List\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"pm.test(\" Verify that Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData= pm.response.json();\r",
									"pm.environment.set(\"List_ID\",jsonData.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"List_Name\", \"New_List\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Trello2_url}}/1/lists?idBoard={{Board_Id}}&key={{key}}&token={{token}}&name={{List_Name}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"lists"
							],
							"query": [
								{
									"key": "idBoard",
									"value": "{{Board_Id}}"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "name",
									"value": "{{List_Name}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 3s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"verify name of list is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"New_List\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/lists/{{List_ID}}?key={{key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"lists",
								"{{List_ID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vreify that list update\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Closed\");\r",
									"});\r",
									"\r",
									"pm.test(\" Verify that Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"name\":\"Closed\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Trello2_url}}/1/lists/{{List_ID}}?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"lists",
								"{{List_ID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Card",
			"item": [
				{
					"name": "Create Card",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData=pm.response.json();\r",
									"pm.environment.set(\"Card_Id\",jsonData.id);\r",
									"\r",
									"pm.test(\"Response time is less than 3s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\" Verify that Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Verify that name of card is New_Card \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"New_Card\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n\"name\":\"New_Card\",\r\n \"start\": \"2024-06-12\",\r\n \"due\": \"2024-06-19\"\r\n \r\n \r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Trello2_url}}/1/cards?idList={{List_ID}}&key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"cards"
							],
							"query": [
								{
									"key": "idList",
									"value": "{{List_ID}}"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a Card on a Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Trello2_url}}/1/boards/{{Board_Id}}/cards/{{Card_Id}}?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"boards",
								"{{Board_Id}}",
								"cards",
								"{{Card_Id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Cards on a Board",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Trello2_url}}/1/boards/{{Board_Id}}/cards?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"boards",
								"{{Board_Id}}",
								"cards"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": " Get filtered Cards ",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Trello2_url}}/1/boards/{{Board_Id}}/cards/all?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"boards",
								"{{Board_Id}}",
								"cards",
								"all"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Attachment On Card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsodata=pm.response.json();\r",
									"pm.environment.set(\"Attachment_Id\",jsodata.id);\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n    \"id\": \"5abbe4b7ddc1b351ef961414\",\r\n    \"date\": \"2018-10-17T19:10:14.808Z\",\r\n    \"edgeColor\": \"yellow\",\r\n    \"idMember\": \"5abbe4b7ddc1b351ef961414\",\r\n    \"url\": \"https://admin.typeform.com/form/RzExEM/share#/link\",\r\n    \"name\": \"Deprecation Extension Notice\",\r\n    \"previews\": []\r\n  }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Trello2_url}}/1/cards/{{Card_Id}}/attachments?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"cards",
								"{{Card_Id}}",
								"attachments"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an Attachment on a Card",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{Trello2_url}}/1/cards/{{Card_Id}}/attachments/{{Attachment_Id}}?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"cards",
								"{{Card_Id}}",
								"attachments",
								"{{Attachment_Id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Lable",
			"item": [
				{
					"name": "Create label",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify that Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3000s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"var jsondata=pm.response.json();\r",
									"pm.environment.set(\"Lable_Id\",jsondata.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n\"name\":\"New_Label\",\r\n\"color\":\"red\"\r\n\r\n\r\n\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Trello2_url}}/1/cards/{{Card_Id}}/labels?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"cards",
								"{{Card_Id}}",
								"labels"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get label",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Trello2_url}}/1/labels/{{Lable_Id}}?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"labels",
								"{{Lable_Id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Label",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Checking the name of label\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"update_label\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that the update color is Green\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.color).to.eql(\"green\");\r",
									"});\r",
									"pm.test(\"Verify that the update color is update_label \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.color).to.eql(\"green\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\":\"update_label\",\r\n\"color\":\"green\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Trello2_url}}/1/labels/{{Lable_Id}}?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"labels",
								"{{Lable_Id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a Label from a Card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{Trello2_url}}/1/cards/{{Card_Id}}/idLabels/{{Lable_Id}}?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"cards",
								"{{Card_Id}}",
								"idLabels",
								"{{Lable_Id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Checklist",
			"item": [
				{
					"name": "Create Checklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"Checklist_ID\",\"CHeckListID\");\r",
									"\r",
									"pm.test(\" Verify that Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 3 s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that checklist name is Days\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Days\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n  \"name\":\"Days\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Trello2_url}}/1/checklists?idCard={{Card_Id}}&key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"checklists"
							],
							"query": [
								{
									"key": "idCard",
									"value": "{{Card_Id}}"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.text();\r",
									"var checkItemId = jsonData.split(' ').pop();\r",
									"\r",
									"pm.environment.set(\"Checkitem_id\", checkItemId);\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 3s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Check Item 1\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Trello2_url}}/1/checklists/{CHeckListID}}/checkItems?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"checklists",
								"{CHeckListID}}",
								"checkItems"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Checkitems",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Trello2_url}}/1/checklists/{{Checklist_ID}}/checkItems?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"checklists",
								"{{Checklist_ID}}",
								"checkItems"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Checkitem",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 3s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{Trello2_url}}/1/checklists/{{Checklist_ID}}/checkItems/{{Checkitem_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{Trello2_url}}"
							],
							"path": [
								"1",
								"checklists",
								"{{Checklist_ID}}",
								"checkItems",
								"{{Checkitem_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Checklist",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.trello.com/1/checklists/{{Checklist_ID}}?key={{key}}&token={{token}}",
							"protocol": "https",
							"host": [
								"api",
								"trello",
								"com"
							],
							"path": [
								"1",
								"checklists",
								"{{Checklist_ID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete a Card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 3s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Trello2_url}}/1/cards/{{Card_Id}}?key={{key}}&token={{token}}",
					"host": [
						"{{Trello2_url}}"
					],
					"path": [
						"1",
						"cards",
						"{{Card_Id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete board",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Trello2_url}}/1/boards/{{Board_Id}}?key={{key}}&token={{token}}",
					"host": [
						"{{Trello2_url}}"
					],
					"path": [
						"1",
						"boards",
						"{{Board_Id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an Organization",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Trello2_url}}/1/organizations/{{organsiation_Id}}?key={{key}}&token={{token}}",
					"host": [
						"{{Trello2_url}}"
					],
					"path": [
						"1",
						"organizations",
						"{{organsiation_Id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		}
	]
}